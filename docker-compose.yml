version: '3.5'

x-container: &base-container
  stdin_open: true
  tty: true
  restart: always

services:
  registration-provider:
    <<: *base-container
    container_name: registration-provider
    depends_on:
      - hasura
    build:
      context: ./registration
      dockerfile: Dockerfile

  mailer-service:
    <<: *base-container
    container_name: mailer-service
    build:
      context: ./services/mailer
      dockerfile: Dockerfile
    environment:
      JWT_SECRET: "${JWT_SECRET:?JWT_SECRET}"

  authentication-service:
    <<: *base-container
    container_name: authentication-service
    build:
      context: ./services/authentication
      dockerfile: Dockerfile
    environment:
      JWT_SECRET: "${JWT_SECRET:?JWT_SECRET}"

  caddy:
    <<: *base-container
    container_name: caddy
    image: abiosoft/caddy
    environment:
      ACME_AGREE: "true"
    ports:
      - "${ENDPOINT_PORT:-2015}:2015"
    volumes:
      - ./Caddyfile:/etc/Caddyfile
      - ./certs:/root/.caddy

  postgres:
    <<: *base-container
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres

  hasura:
    <<: *base-container
    container_name: hasura
    image: hasura/graphql-engine:latest.cli-migrations
    volumes:
      - ./backups:/hasura-migrations
    depends_on:
      - postgres
      - mailer-service
      - authentication-service
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-changeme}@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET:?HASURA_ADMIN_SECRET}
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS512", "key":"${JWT_SECRET:?JWT_SECRET}"}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"

  pgadmin:
    <<: *base-container
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      SCRIPT_NAME: "/pgadmin"
    depends_on:
      - postgres
    volumes:
      - pgadmin:/root/.pgadmin

volumes:
  postgres:
  pgadmin: