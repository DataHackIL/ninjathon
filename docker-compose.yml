version: '3.5'

services:
  services:
    container_name: services
    ports:
      - "3000:3000"
    links:
      - postgres:postgres
    build:
      context: ./services
      dockerfile: Dockerfile
    environment:
      JWT_SECRET: "7hGQwy223vy8tUH4fbk5EndfthrqTNtHtuzQVE6nLQdGLknMHPAvADt6y7tr4s8LV"

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  hasura:
    container_name: hasura
    image: hasura/graphql-engine:v1.0.0-beta.4
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
      - "services"
    restart: always
    links:
      - postgres:postgres
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:changeme@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: datahacked
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS512", "key":"7hGQwy223vy8tUH4fbk5EndfthrqTNtHtuzQVE6nLQdGLknMHPAvADt6y7tr4s8LV"}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    depends_on:
      - "postgres"
    links:
      - postgres:postgres
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped


volumes:
  postgres:
  pgadmin: